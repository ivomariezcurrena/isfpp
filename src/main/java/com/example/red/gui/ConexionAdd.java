/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.red.gui;

import com.example.red.conexion.ConexionBD;

import com.example.red.modelo.*;
import com.example.red.negocio.Red;
import com.example.red.servicio.*;
import java.util.TreeMap;

/**
 *
 * @author Lautaro
 */
public class ConexionAdd extends javax.swing.JFrame {
    private Red red;
    private TipoCableServiceImpl tipoCableSer = new TipoCableServiceImpl();
    private TipoPuertoServiceImpl tipoPuertoSer = new TipoPuertoServiceImpl();
    private ConexionServiceImpl ConService = new ConexionServiceImpl();

    /**
     * Creates new form ConexionAdd
     */
    public ConexionAdd() {
        initComponents();
        TreeMap<String, Conexion> conexiones = ConService.buscarTodos();
        red = Red.getRed();
        TreeMap<String, TipoCable> mapcable = tipoCableSer.buscarTodos();
        TreeMap<String, TipoPuerto> mappuerto = tipoPuertoSer.buscarTodos();
        for (Equipo equipo : red.getEquipos()) {
            String equi = equipo.getCodigo();
            E1Box.addItem(equi);
            E2Box.addItem(equi);
        }
        for (TipoPuerto puertos : mappuerto.values()) {
            String pu = puertos.getCodigo();
            P1Box.addItem(pu);
            P2Box.addItem(pu);
        }

        for (TipoCable cables : mapcable.values()) {

            String ca = cables.getCodigo();
            CableBox.addItem(ca);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        E1Box = new javax.swing.JComboBox<>();
        P1Box = new javax.swing.JComboBox<>();
        E2Box = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        P2Box = new javax.swing.JComboBox<>();
        CableBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Acceptar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Cancelar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(CableBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(183, 183, 183)
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                                jPanel1Layout.createSequentialGroup()
                                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                                        .addComponent(jButton1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                100,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(84, 84, 84))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(E2Box, 0, 100, Short.MAX_VALUE)
                                                        .addComponent(E1Box, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                Short.MAX_VALUE))
                                                .addGap(80, 80, 80)
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(P1Box, 0, 100, Short.MAX_VALUE)
                                                        .addComponent(P2Box, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                Short.MAX_VALUE))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE)))));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(P1Box, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                        .addComponent(E1Box))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(P2Box)
                                        .addComponent(E2Box, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33,
                                        Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1)
                                        .addComponent(CableBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addGap(51, 51, 51)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButton1MouseClicked
        TreeMap<String, TipoCable> mapcable = tipoCableSer.buscarTodos();
        TreeMap<String, TipoPuerto> mappuerto = tipoPuertoSer.buscarTodos();
        Equipo E1 = null, E2 = null;
        TipoPuerto P1 = null, P2 = null;
        TipoCable C1 = null;
        for (Equipo equipo : red.getEquipos()) {
            String equi = equipo.getCodigo();
            if (equi.equals((String) E1Box.getSelectedItem())) {
                E1 = equipo;
                System.out.printf(E1.getCodigo());
            }
            if (equi.equals((String) E2Box.getSelectedItem())) {
                E2 = equipo;
                System.out.printf(E2.getCodigo());
            }
        }
        for (TipoPuerto puertos : mappuerto.values()) {
            String pu = puertos.getCodigo();
            if (pu.equals((String) P1Box.getSelectedItem())) {
                P1 = puertos;
                System.out.printf(P1.getCodigo());
            }
            if (pu.equals((String) P2Box.getSelectedItem())) {
                P2 = puertos;
                System.out.printf(P2.getCodigo());
            }
        }
        for (TipoCable cables : mapcable.values()) {
            String ca = cables.getCodigo();
            if (ca.equals((String) CableBox.getSelectedItem())) {
                C1 = cables;
                System.out.printf(C1.getCodigo());
            }
        }
        Conexion conex = new Conexion(E1, E2, C1, P1, P2);
        System.out.print(conex.getTipoPuerto2());
        ConService.insertar(conex);
    }// GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConexionAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConexionAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConexionAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConexionAdd.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        try {
            ConexionBD.getInstance().connectToDatabase();
        } catch (Exception e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConexionAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CableBox;
    private javax.swing.JComboBox<String> E1Box;
    private javax.swing.JComboBox<String> E2Box;
    private javax.swing.JComboBox<String> P1Box;
    private javax.swing.JComboBox<String> P2Box;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
