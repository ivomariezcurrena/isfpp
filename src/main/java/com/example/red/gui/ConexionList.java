/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.red.gui;

import com.example.red.conexion.ConexionBD;
import com.example.red.modelo.Equipo;
import com.example.red.modelo.Conexion;
import com.example.red.modelo.TipoCable;
import com.example.red.modelo.TipoPuerto;
import com.example.red.negocio.Calculo;
import com.example.red.negocio.Red;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import com.example.red.servicio.ConexionService;
import com.example.red.servicio.ConexionServiceImpl;

/**
 *
 * @author Lautaro
 */
public class ConexionList extends javax.swing.JFrame {
    //private Red red; 
   
   private ConexionServiceImpl ConService = new ConexionServiceImpl();
    DefaultTableModel E = new DefaultTableModel();

    /**
     * Creates new form ConexionList
     */
    public ConexionList() {
        initComponents();
        setTable();
        
       // calculo = new Calculo();
        //calculo.cargarDatos(red.getTablaEquipos(), red.getConexiones());
       setDatos();
    }
    
    private void setTable (){                     //CREA Y NOMBRA COLUMNAS    
    String[] title = {"Equipo 1","Puerto 1","Equipo 2","Puerto 2", "Cable"};
    E.setColumnIdentifiers(title);
    TableConex.setModel(E);
    }
    private void setDatos(){                      //CREA FILA PARA CADA Conexion
        Red ned = new Red();
        Object[] datos = new Object[E.getColumnCount()];
        for (Conexion hard : ned.getConexiones()) {
            Equipo E1 = hard.getEquipo1();
            Equipo E2 = hard.getEquipo2();
            TipoCable C = hard.getTipocable();
            TipoPuerto P1 = hard.getTipoPuerto1();
            TipoPuerto P2 = hard.getTipoPuerto2();
            datos[0] = E1.getCodigo();
            datos[1] = P1.getCodigo();
            datos[2] = E2.getCodigo();
            datos[3] = P2.getCodigo();
            datos[4] = C.getCodigo();
            E.addRow(datos);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableConex = new javax.swing.JTable();
        AddConex = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        BorrarBoton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TableConex.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TableConex);

        AddConex.setBackground(new java.awt.Color(0, 102, 102));
        AddConex.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AddConex.setForeground(new java.awt.Color(255, 255, 255));
        AddConex.setText("Agregar");
        AddConex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddConexMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddConexMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddConexMouseExited(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Modificar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        BorrarBoton.setBackground(new java.awt.Color(0, 102, 102));
        BorrarBoton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        BorrarBoton.setForeground(new java.awt.Color(255, 255, 255));
        BorrarBoton.setText("Borrar");
        BorrarBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BorrarBotonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BorrarBotonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BorrarBotonMouseExited(evt);
            }
        });

        jButton1.setText("Reset");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel1.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(205, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddConex)
                        .addGap(50, 50, 50)
                        .addComponent(jButton2)
                        .addGap(50, 50, 50)
                        .addComponent(BorrarBoton)))
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddConex)
                    .addComponent(jButton2)
                    .addComponent(BorrarBoton))
                .addGap(3, 3, 3)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddConexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddConexMouseClicked
        ConexionAdd.main(null);
    }//GEN-LAST:event_AddConexMouseClicked

    private void AddConexMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddConexMouseEntered
        AddConex.setBackground(new java.awt.Color(100,204,79));
    }//GEN-LAST:event_AddConexMouseEntered

    private void AddConexMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddConexMouseExited
        AddConex.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_AddConexMouseExited

    private void BorrarBotonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarBotonMouseEntered
        BorrarBoton.setBackground(Color.red);
    }//GEN-LAST:event_BorrarBotonMouseEntered

    private void BorrarBotonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarBotonMouseExited
        BorrarBoton.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_BorrarBotonMouseExited

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
     
        ConexionMod.main(null);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                          
        //red = Red.getRed();       
        E.setRowCount(0);      
        setDatos();
    }                                     

    private void BorrarBotonMouseClicked(java.awt.event.MouseEvent evt) {
        Red ned = new Red();
    int selectRow = TableConex.getSelectedRow();
    if (selectRow != -1) {
        Equipo E1 = null, E2 = null;
        TipoPuerto P1 = null, P2 = null;
        TipoCable C1 = null;
        String AE1 = (String)TableConex.getValueAt(selectRow, 0);
        String AP1 = (String)TableConex.getValueAt(selectRow, 1);
        String AE2 = (String)TableConex.getValueAt(selectRow,2);
        String AP2 = (String)TableConex.getValueAt(selectRow, 3);
        String AC1 = (String)TableConex.getValueAt(selectRow, 4);
            // Obtener el n√∫mero de columnas
            for (Equipo equipo : ned.getEquipos()) {
                String equi = equipo.getCodigo();
                if(equi.equals(AE1)){
                E1 = equipo;
                System.out.printf(E1.getCodigo());
                }
                if(equi.equals(AE2)){
                E2 = equipo;
                System.out.printf(E2.getCodigo());
                }                              
            }
            for (TipoPuerto puertos : ned.getTipoPuerto()){
                String pu = puertos.getCodigo();
                if(pu.equals(AP1)){
                P1 = puertos;
                System.out.printf(P1.getCodigo());
                }
                if(pu.equals(AP2)){
                P2 = puertos;
                System.out.printf(P2.getCodigo());
                }
            }
             for (TipoCable cables : ned.getTipoCable()){          
                String ca = cables.getCodigo();
                if(ca.equals(AC1)){
                C1 = cables;
                System.out.printf(C1.getCodigo());
                }}
        ConService.borrar(new Conexion(E1,E2,C1,P1,P2));
        jLabel1.setText("la conexion " + AE1 + ", " + AP1 + ", " + AE2 +", " + AP2 +", " + AC1 + " se borr√≥");
    }}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConexionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConexionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConexionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConexionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            ConexionBD.getInstance().connectToDatabase();
        } catch (Exception e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConexionList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddConex;
    private javax.swing.JButton BorrarBoton;
    private javax.swing.JTable TableConex;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
